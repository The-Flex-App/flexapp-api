extend type Query {
  projectById(id: ID!): Project

  projectByWorkspaceId(
    workspaceId: String!
    orderBy: ProjectSortInput
    first: Int
    offset: Int
  ): [Project]!

  projects(first: Int, offset: Int, orderBy: ProjectSortInput): [Project!]!
}

extend type Mutation {
  createProject(input: ProjectInput!): Project!
  editProject(id: ID!, input: ProjectInput!): Project
  deleteProject(id: ID!): Project
}

input ProjectSortInput {
  field: String!
  direction: ProjectSort
}

enum ProjectSort {
  asc
  desc
}

type Project {
  id: ID!
  title: String!
  description: String
  rag: String!
  order: ID!
  period: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  topics: [Topic!]!
}

input ProjectInput {
  title: String!
  workspaceId: String
  description: String
  rag: String!
  period: String!
  order: ID!
}
