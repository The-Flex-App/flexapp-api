extend type Query {
  videoById(id: ID!): Video

  videosByProject(projectId: Int): [Video]!

  videos(first: Int, offset: Int, orderBy: SortInput): [Video!]!
}

extend type Mutation {
  createVideo(input: VideoInput!): Video!
  editVideo(id: ID!, input: VideoInput!): Video
  deleteVideo(id: ID!): Video
}

input SortInput {
  field: String!
  direction: Sort
}

enum Sort {
  asc
  desc
}

type Video {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  projectId: Int!
  title: String
  thumbnail: String
  duration: Int
  video: String!
  description: String
}

input VideoInput {
  title: String
  description: String
  video: String!
  thumbnail: String
  duration: Int
  projectId: Int!
}
