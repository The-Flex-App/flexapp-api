extend type Query {
  userById(id: String!): User!
  getUserInfo(id: String): UserInfo!
}

extend type Mutation {
  createUser(input: UserInput): UserInfo
}

type UserInfo {
  firstName: String!
  lastName: String!
  workspaceId :String!
  email: String!
  memberWorkspaceInfo: [MemberWorkSpace!]!
  ownerWorkspaceInfo: [OwnerWorkSpace!]!
}

type MemberWorkSpace {
  id: String!
  userName: String
  email: String!
  firstName: String!
  lastName: String!
  workspaceId :String!
}

type OwnerWorkSpace {
  id: String!
  userName: String
  email: String!
  firstName: String!
  lastName: String!
  role: String!
}

type User {
  id: String!
  userName: String!
  email: String!
  firstName: String!
  lastName: String!
  createdAt: DateTime
  updatedAt: DateTime
  workspaceId :String!
}

input UserInput {
  id: String!
  userName: String!
  email: String!
  firstName: String!
  lastName: String!
}
